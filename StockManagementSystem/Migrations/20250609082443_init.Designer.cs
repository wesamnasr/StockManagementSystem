// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagementSystem.Models;

#nullable disable

namespace StockManagementSystem.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250609082443_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Debt")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Debt = 0,
                            Name = "Customer 1",
                            Phone = "1234567891"
                        },
                        new
                        {
                            CustomerID = 2,
                            Debt = 0,
                            Name = "Customer 2",
                            Phone = "1234567892"
                        },
                        new
                        {
                            CustomerID = 3,
                            Debt = 0,
                            Name = "Customer 3",
                            Phone = "1234567893"
                        },
                        new
                        {
                            CustomerID = 4,
                            Debt = 0,
                            Name = "Customer 4",
                            Phone = "1234567894"
                        },
                        new
                        {
                            CustomerID = 5,
                            Debt = 0,
                            Name = "Customer 5",
                            Phone = "1234567895"
                        },
                        new
                        {
                            CustomerID = 6,
                            Debt = 0,
                            Name = "Customer 6",
                            Phone = "1234567896"
                        },
                        new
                        {
                            CustomerID = 7,
                            Debt = 0,
                            Name = "Customer 7",
                            Phone = "1234567897"
                        },
                        new
                        {
                            CustomerID = 8,
                            Debt = 0,
                            Name = "Customer 8",
                            Phone = "1234567898"
                        },
                        new
                        {
                            CustomerID = 9,
                            Debt = 0,
                            Name = "Customer 9",
                            Phone = "1234567899"
                        },
                        new
                        {
                            CustomerID = 10,
                            Debt = 0,
                            Name = "Customer 10",
                            Phone = "12345678910"
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.CustomerBill", b =>
                {
                    b.Property<int>("CustomerBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerBillID"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CustomerBillID");

                    b.HasIndex("CustomerID");

                    b.ToTable("CustomerBills");

                    b.HasData(
                        new
                        {
                            CustomerBillID = 1,
                            BillDate = new DateTime(2025, 6, 8, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3714),
                            CustomerID = 1,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 2,
                            BillDate = new DateTime(2025, 6, 7, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3760),
                            CustomerID = 2,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 3,
                            BillDate = new DateTime(2025, 6, 6, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3781),
                            CustomerID = 3,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 4,
                            BillDate = new DateTime(2025, 6, 5, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3792),
                            CustomerID = 4,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 5,
                            BillDate = new DateTime(2025, 6, 4, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3803),
                            CustomerID = 5,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 6,
                            BillDate = new DateTime(2025, 6, 3, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3821),
                            CustomerID = 6,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 7,
                            BillDate = new DateTime(2025, 6, 2, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3833),
                            CustomerID = 7,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 8,
                            BillDate = new DateTime(2025, 6, 1, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3844),
                            CustomerID = 8,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 9,
                            BillDate = new DateTime(2025, 5, 31, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3856),
                            CustomerID = 9,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerBillID = 10,
                            BillDate = new DateTime(2025, 5, 30, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3872),
                            CustomerID = 10,
                            TotalAmount = 0m
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.CustomerBillItem", b =>
                {
                    b.Property<int>("CustomerBillItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerBillItemID"));

                    b.Property<int>("CustomerBillID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CustomerBillItemID");

                    b.HasIndex("CustomerBillID");

                    b.HasIndex("ProductID");

                    b.ToTable("CustomerBillItems");

                    b.HasData(
                        new
                        {
                            CustomerBillItemID = 1,
                            CustomerBillID = 1,
                            ProductID = 2,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 110m
                        },
                        new
                        {
                            CustomerBillItemID = 2,
                            CustomerBillID = 2,
                            ProductID = 3,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 120m
                        },
                        new
                        {
                            CustomerBillItemID = 3,
                            CustomerBillID = 3,
                            ProductID = 4,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 130m
                        },
                        new
                        {
                            CustomerBillItemID = 4,
                            CustomerBillID = 4,
                            ProductID = 5,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 140m
                        },
                        new
                        {
                            CustomerBillItemID = 5,
                            CustomerBillID = 5,
                            ProductID = 6,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 150m
                        },
                        new
                        {
                            CustomerBillItemID = 6,
                            CustomerBillID = 6,
                            ProductID = 7,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 160m
                        },
                        new
                        {
                            CustomerBillItemID = 7,
                            CustomerBillID = 7,
                            ProductID = 8,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 170m
                        },
                        new
                        {
                            CustomerBillItemID = 8,
                            CustomerBillID = 8,
                            ProductID = 9,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 180m
                        },
                        new
                        {
                            CustomerBillItemID = 9,
                            CustomerBillID = 9,
                            ProductID = 10,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 190m
                        },
                        new
                        {
                            CustomerBillItemID = 10,
                            CustomerBillID = 10,
                            ProductID = 1,
                            Quantity = 3,
                            TotalPrice = 0m,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.Password", b =>
                {
                    b.Property<int>("PasswordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PasswordID");

                    b.ToTable("Passwords");

                    b.HasData(
                        new
                        {
                            PasswordID = 1,
                            CreatedAt = new DateTime(2025, 6, 9, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(4365),
                            NewPassword = "123",
                            OldPassword = "123"
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Name = "Product 1",
                            QuantityInStock = 50,
                            SupplierID = 1,
                            UnitPrice = 20m
                        },
                        new
                        {
                            ProductID = 2,
                            Name = "Product 2",
                            QuantityInStock = 50,
                            SupplierID = 2,
                            UnitPrice = 30m
                        },
                        new
                        {
                            ProductID = 3,
                            Name = "Product 3",
                            QuantityInStock = 50,
                            SupplierID = 3,
                            UnitPrice = 40m
                        },
                        new
                        {
                            ProductID = 4,
                            Name = "Product 4",
                            QuantityInStock = 50,
                            SupplierID = 4,
                            UnitPrice = 50m
                        },
                        new
                        {
                            ProductID = 5,
                            Name = "Product 5",
                            QuantityInStock = 50,
                            SupplierID = 5,
                            UnitPrice = 60m
                        },
                        new
                        {
                            ProductID = 6,
                            Name = "Product 6",
                            QuantityInStock = 50,
                            SupplierID = 6,
                            UnitPrice = 70m
                        },
                        new
                        {
                            ProductID = 7,
                            Name = "Product 7",
                            QuantityInStock = 50,
                            SupplierID = 7,
                            UnitPrice = 80m
                        },
                        new
                        {
                            ProductID = 8,
                            Name = "Product 8",
                            QuantityInStock = 50,
                            SupplierID = 8,
                            UnitPrice = 90m
                        },
                        new
                        {
                            ProductID = 9,
                            Name = "Product 9",
                            QuantityInStock = 50,
                            SupplierID = 9,
                            UnitPrice = 100m
                        },
                        new
                        {
                            ProductID = 10,
                            Name = "Product 10",
                            QuantityInStock = 50,
                            SupplierID = 10,
                            UnitPrice = 110m
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierID = 1,
                            Name = "Supplier 1",
                            Phone = "9876543211"
                        },
                        new
                        {
                            SupplierID = 2,
                            Name = "Supplier 2",
                            Phone = "9876543212"
                        },
                        new
                        {
                            SupplierID = 3,
                            Name = "Supplier 3",
                            Phone = "9876543213"
                        },
                        new
                        {
                            SupplierID = 4,
                            Name = "Supplier 4",
                            Phone = "9876543214"
                        },
                        new
                        {
                            SupplierID = 5,
                            Name = "Supplier 5",
                            Phone = "9876543215"
                        },
                        new
                        {
                            SupplierID = 6,
                            Name = "Supplier 6",
                            Phone = "9876543216"
                        },
                        new
                        {
                            SupplierID = 7,
                            Name = "Supplier 7",
                            Phone = "9876543217"
                        },
                        new
                        {
                            SupplierID = 8,
                            Name = "Supplier 8",
                            Phone = "9876543218"
                        },
                        new
                        {
                            SupplierID = 9,
                            Name = "Supplier 9",
                            Phone = "9876543219"
                        },
                        new
                        {
                            SupplierID = 10,
                            Name = "Supplier 10",
                            Phone = "98765432110"
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.SupplierBill", b =>
                {
                    b.Property<int>("SupplierBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierBillID"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SupplierBillID");

                    b.HasIndex("SupplierID");

                    b.ToTable("SupplierBills");

                    b.HasData(
                        new
                        {
                            SupplierBillID = 1,
                            BillDate = new DateTime(2025, 6, 8, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3482),
                            PaidAmount = 0m,
                            SupplierID = 1,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 2,
                            BillDate = new DateTime(2025, 6, 7, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3558),
                            PaidAmount = 0m,
                            SupplierID = 2,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 3,
                            BillDate = new DateTime(2025, 6, 6, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3568),
                            PaidAmount = 0m,
                            SupplierID = 3,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 4,
                            BillDate = new DateTime(2025, 6, 5, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3575),
                            PaidAmount = 0m,
                            SupplierID = 4,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 5,
                            BillDate = new DateTime(2025, 6, 4, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3581),
                            PaidAmount = 0m,
                            SupplierID = 5,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 6,
                            BillDate = new DateTime(2025, 6, 3, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3591),
                            PaidAmount = 0m,
                            SupplierID = 6,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 7,
                            BillDate = new DateTime(2025, 6, 2, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3599),
                            PaidAmount = 0m,
                            SupplierID = 7,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 8,
                            BillDate = new DateTime(2025, 6, 1, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3607),
                            PaidAmount = 0m,
                            SupplierID = 8,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 9,
                            BillDate = new DateTime(2025, 5, 31, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3614),
                            PaidAmount = 0m,
                            SupplierID = 9,
                            TotalAmount = 0m
                        },
                        new
                        {
                            SupplierBillID = 10,
                            BillDate = new DateTime(2025, 5, 30, 11, 24, 42, 418, DateTimeKind.Local).AddTicks(3622),
                            PaidAmount = 0m,
                            SupplierID = 10,
                            TotalAmount = 0m
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.SupplierBillItem", b =>
                {
                    b.Property<int>("SupplierBillItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierBillItemID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierBillID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SupplierBillItemID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SupplierBillID");

                    b.ToTable("SupplierBillItems");

                    b.HasData(
                        new
                        {
                            SupplierBillItemID = 1,
                            ProductID = 2,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 1,
                            TotalPrice = 0m,
                            UnitPrice = 110m
                        },
                        new
                        {
                            SupplierBillItemID = 2,
                            ProductID = 3,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 2,
                            TotalPrice = 0m,
                            UnitPrice = 120m
                        },
                        new
                        {
                            SupplierBillItemID = 3,
                            ProductID = 4,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 3,
                            TotalPrice = 0m,
                            UnitPrice = 130m
                        },
                        new
                        {
                            SupplierBillItemID = 4,
                            ProductID = 5,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 4,
                            TotalPrice = 0m,
                            UnitPrice = 140m
                        },
                        new
                        {
                            SupplierBillItemID = 5,
                            ProductID = 6,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 5,
                            TotalPrice = 0m,
                            UnitPrice = 150m
                        },
                        new
                        {
                            SupplierBillItemID = 6,
                            ProductID = 7,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 6,
                            TotalPrice = 0m,
                            UnitPrice = 160m
                        },
                        new
                        {
                            SupplierBillItemID = 7,
                            ProductID = 8,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 7,
                            TotalPrice = 0m,
                            UnitPrice = 170m
                        },
                        new
                        {
                            SupplierBillItemID = 8,
                            ProductID = 9,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 8,
                            TotalPrice = 0m,
                            UnitPrice = 180m
                        },
                        new
                        {
                            SupplierBillItemID = 9,
                            ProductID = 10,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 9,
                            TotalPrice = 0m,
                            UnitPrice = 190m
                        },
                        new
                        {
                            SupplierBillItemID = 10,
                            ProductID = 1,
                            PurchaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            SupplierBillID = 10,
                            TotalPrice = 0m,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("StockManagementSystem.Models.CustomerBill", b =>
                {
                    b.HasOne("StockManagementSystem.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("StockManagementSystem.Models.CustomerBillItem", b =>
                {
                    b.HasOne("StockManagementSystem.Models.CustomerBill", "CustomerBill")
                        .WithMany("Items")
                        .HasForeignKey("CustomerBillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockManagementSystem.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomerBill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StockManagementSystem.Models.Product", b =>
                {
                    b.HasOne("StockManagementSystem.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StockManagementSystem.Models.SupplierBill", b =>
                {
                    b.HasOne("StockManagementSystem.Models.Supplier", "Supplier")
                        .WithMany("Invoices")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StockManagementSystem.Models.SupplierBillItem", b =>
                {
                    b.HasOne("StockManagementSystem.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockManagementSystem.Models.SupplierBill", "SupplierBill")
                        .WithMany("Items")
                        .HasForeignKey("SupplierBillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SupplierBill");
                });

            modelBuilder.Entity("StockManagementSystem.Models.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("StockManagementSystem.Models.CustomerBill", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("StockManagementSystem.Models.Supplier", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("StockManagementSystem.Models.SupplierBill", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
